13. Дайте определение понятию ORM, укажите ORM, с которыми вы работали и применимость объектно-реляционного отображения в разработке.
Объектно-реляционное отображение (ORM = object-relational mapper) - это библиотека языка программирования, выполняющая отображение объектов реляционной модели (отношения, строки и атрибуты) на объекты языка программирования (классы, экземпляры, методы, атрибуты).
Таблица (отношение, включая виртуальные таблицы - JOIN, VIEW) обычно соответствуют классу, строки таблицы - экземплярам этого класса, колонки таблицы ("реляционные атрибуты") при этом отображаются на атрибуты объекта или вызовы методов чтения/записи.
ОРП - теоретически позволяет программисту работать с таблицами, полями и связями реляционной БД, как с объектами, свойствами и коллекциями (массивами), не отвлекаясь на подробности более низкого уровня, такими, например, как порядок выборки и сохранения модифицированных данных, вопросы переносимости и особенностей диалекта SQL конкретной СУБД, генерации уникальных первичных ключей, заполнения полей ссылок для моделирования связей.
14. Дайте определение Web API, опишите назначение и применимость разработки API по сравнению с монолитными приложениями.
API –это интерфейс обработки приложений между веб-сервером и веб-браузером. 
Максимальное разделение фронтенда и бэкенда.
Повышает безопасность. API позволяет вынести в отдельное приложение функциональность, которая должна быть защищена. Так снижается вероятность некорректного использования этих функций другими программами.

API — это набор правил, по которым приложения или части программы общаются друг с другом. Его можно встретить везде — от операционных систем до веб-приложений. API позволяет разработчикам использовать готовые инструменты и не переживать за их реализацию. А ещё он делает приложения безопаснее и помогает связывать разные программы между собой.
15.1. Опишите назначение платформы NET, ее основные компоненты и возможности при разработке.
NET - (Dotnet, рис.1 ), платформа компании Microsoft. Главной её особенностью является , что на этой платформе можно писать различными языками программирования такие как : C Sharp, F Sharp , C++, Visual Basic и другие. Dotnet делится на .NET Core - модульная платформа, для создания кроссплатформенных приложений с открытым исходным кодом..NET Framework - платформа для операционной системы Windows , позволяющая пользователю писать программное обеспечение.
В .NET Framework есть три основных компонента: CLR, CTS и CLS. В этой статье рассмотри их подробнее.
CLR
Основная задача CLR – автоматическое обнаружение, загрузка и управление типами .NET. В данном случае типами управляет .NET, а не программист. Также среда CLR заботится о ряде низкоуровневых деталей – управление памятью, обработка потоков, выполнение разных проверок, связанных с безопасностью.
CTS
Общая система типов (Common Type System) или система CTS предоставляет полное описание всех возможных типов данных и программных конструкций, которые поддерживаются исполняющей средой, а также способов, как все эти сущности могут взаимодействовать друг с другом. Нужно помнить, что любая возможность CTS может не поддерживаться в отдельно взятом языке, совместимом с .NET Framework.
CTS представляет собой формальную спецификацию, в которой описано то, как должны быть определены типы для того, чтобы они могли обслуживаться в CLR-среде. Существует пять типов CTS. Рассмотрим их подробнее:
CLS
Третий компонент (Common Language Specification) или спецификация CLS. В ней описано лишь то подмножество общих типов и программных конструкций, каковое способны воспринимать все .NET языки.
CLS можно считать просто подмножеством всех функциональных возможностей, определенных в CTS. CLS является набором правил, которые должны придерживаться создатели компиляторов, если они хотят чтобы их продукты могли без особых проблем функционировать в мире .NET Framework.
Кроме среды CLR и спецификаций CTS и CLS, в составе платформы .NET существует библиотека базовых классов. В этой библиотеке содержатся определения примитивов (потоки, файловые I/O, системы графической визуализации, механизмы для взаимодействия с разными внешними устройствами), предоставляет поддержку ряда служб, которые нужны в большинстве реальных приложений. 
15.2. Опишите назначение платформы ASP.NET, ее основные компоненты и возможности при разработке.
ASP.NET работает поверх протокола HTTP и использует команды и политики HTTP для настройки двусторонней связи и сотрудничества между браузером и сервером.
для написания мощных клиент-серверных интернет-приложений.
Типичное приложение ASP.NET состоит из множества элементов: файлы веб-материалов (.aspx), исходные файлы (файлы .cs), сборки (файлы .dll и .exe), файлы источников данных (файлы .mdb), ссылки, значки, пользовательские элементы управления и другие файлы и папки.
