4. Опишите назначение методологии IDEF0, основные составляющие графические обозначения
нотации, правила именования блоков, направление и назначение стрелок.
IDEF0 — методология моделирования и графическая нотация, предназначенная для формализации и описания бизнес-процессов. Данная модель позволяет описать все основные виды процессов, как административные, так и организационные. Функциональная модель IDEF0 представляет собой набор блоков со входами (вводные, которые ставят определенную задачу) и выходами (выводящие результат деятельности), управлением (механизмы управления (положения, инструкции)) и механизмами (что используется для того, чтобы произвести необходимую работу), которые детализируются (декомпозируются). 
1.	В левом верхнем углу всегда – главный элемент.
2.	Управляющие стрелки называют именами существительными, блоки – глаголами
3.	Все элементы должны иметь входящие и исходящие стрелки, так как для выполнения необходимо что-то получить на входе (заказ, поставленную задачу), а после обработки на выходе необходимо передать готовый продукт. Входящие стрелки всегда слева, исходящие – справа.
4.	Сверху – управляющие элементы, снизу – механизмы, необходимые для выполнения процесса.
5.	Если на одном листе (экране) располагается несколько блоков, каждый последующий располагается справа и ниже предыдущего.
6.	Необходимо стремиться создавать схемы таким образом, чтобы пересечение стрелок было сведено к необходимому минимуму.

5. Опишите назначение методологии DFD, основные составляющие графические обозначения нотации.
DFD (Data Flow Diagram - Диаграмма Потоков Данных) методология а так же графическая нотация, предназначенная для моделирования информационный систем с точки зрения хранения, обработки и передачи данных. 
Процесс (англ. Process), т.е. функция или последовательность действий, которые нужно предпринять, чтобы данные были обработаны.
Внешние сущности (англ. External Entity). Это любые объекты, которые не входят в саму систему, но являются для нее источником информации либо получателями какой-либо информации из системы после обработки данных.
Хранилище данных (англ. Data store). Внутреннее хранилище данных для процессов в системе. Поступившие данные перед обработкой и результат после обработки, а также промежуточные значения должны где-то храниться.
Поток данных (англ. Data flow). В нотации отображается в виде стрелок, которые показывают, какая информация входит, а какая исходит из того или иного блока на диаграмме.
Правила построения DFD диаграмм
•	Каждый процесс должен иметь хотя бы один вход и один выход. Смысл процессов здесь заключается в обработке данных, а потому процесс должен получить данные (входящая стрелка) и отдать куда-то после обработки (исходящая стрелка);
•	Процесс обработки данных должен иметь внешнюю входящую стрелку (данные от внешней сущности). Для того, чтобы любой подобный процесс начал работать, мало использовать данные из хранилища, должна поступить новая информация для последующей обработки;
•	Стрелки не могут связывать напрямую хранилища данных, все связи идут через процессы. Нет смысла просто перемещать данные из одного места в другое, а именно так читается прямая связь двух хранилищ стрелкой. Данные поступают для того, чтобы производились какие-то действия, в нашем примере – осуществлялся процесс продажи. А это возможно только посредством обработки (процесса);
•	Все процессы должны быть связаны либо с другими процессами, либо с другими хранилищами данных. Процессы не существуют сами по себе, а потому результат должен куда-то передаваться;
•	Декомпозиция. В DFD-диаграммах предусмотрена возможность создавать крупные процессы и декомпозировать их на подпроцессы с подробным описанием действий. Например, мы можем создать процесс «создание заявки», который потом декомпозировать на последовательность действий, например, на получение заявки, отдельно – проверку и получение данных клиента, если товар в интернет-магазине продается под заказ, то также при формировании заявки потребуется получить данные от поставщика о наличии нужных наименований и т.д. И тогда на верхней диаграмме у нас будет блок «обработка заявки», а при декомпозировании мы получим диаграмму с подробной последовательностью действий на этом этапе. При этом ни на одном этапе у нас не будет условий и ветвления. Будет процесс и его декомпозиция глубиной до 3-4 уровней.

6. Опишите основные этапы проектирования модели данных в соответствие с методологией IDEF1x.
1.1. Basic Entity Relationship Diagram (Basic ERD) - представляет собой модель данных верхнего уровня. Она включает сущности и взаимосвязи, отражающие основные бизнес-правила предметной области. Такая диаграмма не слишком детализирована, в нее включаются основные сущности и связи между ними, которые удовлетворяют основным требованиям, предъявляемым к информационной системе (ИС). Basic ERD может включать связи многие-ко-многим (не  реализуемые в СУБД) и не включать описание ключей.

1.2. Key Based Model (KBM) - более подробное представление данных. Она включает описание всех сущностей и первичных ключей и предназначена для представления структуры данных и ключей, которые соответствуют предметной области.

1.3. Fully Attributed model (FAM) – наиболее детальное представление структуры данных: включает все сущности, атрибуты и связи.

